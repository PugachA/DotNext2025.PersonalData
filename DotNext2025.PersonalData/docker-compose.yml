services:
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    restart: always
    ports:
      - "15000:15000"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_NUM_PARTITIONS=4
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2182
      - KAFKA_ADVERTISED_LISTENERS=EXTERNAL://${HOSTNAME:-127.0.0.1}:15000,PLAINTEXT://:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_DELETE_TOPIC_ENABLE=true
    depends_on:
      - zookeeper
    healthcheck:
      test:
        [ "CMD", "/bin/kafka-topics", "--list", "--zookeeper", "zookeeper:2182" ]
      interval: 2s
      timeout: 10s
      retries: 60
    networks:
      - kafka-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    restart: always
    ports:
      - "2182:2182"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test:
        [ "CMD", "/bin/bash", "-c", "nc -z zookeeper 2182 || exit -1"]
      interval: 2s
      timeout: 10s
      retries: 60
    networks:
      - kafka-network

  kafka-ui:
    image: ghcr.io/kafbat/kafka-ui:v1.2.0
    ports:
      - "8084:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2182
    depends_on:
      - kafka
    networks:
      - kafka-network

  vault:
    image: hashicorp/vault:1.18.4
    restart: always
    ports:
      - "8201:8201"
    environment:
      VAULT_ADDR: 'http://0.0.0.0:8201'
      VAULT_LOCAL_CONFIG: '{"listener": [{"tcp":{"address": "0.0.0.0:8201","tls_disable":"true"}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h"}, "ui": true}'
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 2s
      timeout: 3s
      retries: 30
    command: > 
      sh -c "./usr/local/bin/docker-entrypoint.sh server -dev & sleep 2s 
      && vault secrets enable transit
      && vault write transit/keys/Order-Aes256GcmIv96Tag128 type=aes256-gcm96 exportable=true auto_rotate_period=90d
      && sleep infinity"
    networks:
      - vault-network

networks:
  kafka-network:
  vault-network: